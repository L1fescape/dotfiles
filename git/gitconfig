[user]
  name = Andrew Kennedy
  email = andrew@akenn.org
[alias]
  lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
  co = checkout
  ci = commit
  st = status
  br = branch
  brl = branch -a
  dbr = push origin --delete # delete branch both remotely and locally
  unadd = reset HEAD
  type = cat-file -t
  dump = cat-file -p
  dl = "!git ll -1"                 # Show modified files in last commit
  dlc = diff --cached HEAD^         # Show a diff last commit
  f = "!git ls-files | grep -i"     # Find a file path in codebase
  gr = grep -Ii                     # Search/grep entire codebase for a string
  la = "!git config -l | grep alias | cut -c 7-" # list all aliases (because we all forget things ... like this command)
  assume = update-index --assume-unchanged # Assume a file as unchanged
  unassume = update-index --no-assume-unchanged # Unassume a file
  assumed = "!git ls-files -v | grep ^h | cut -c 3-" # Show assumed files
  sl = stash list
  sa = stash apply
  ss = stash save
  sp = stash pop
  d = difftool
  hub = "!echo `git config remote.origin.url`"
  dif = "!git diff | vim -"
  recent = "!git for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short) %(subject)' refs/heads"
  recent-all = "!git recent refs/remotes"
[color]
  # Use colors in Git commands that are capable of colored output when outputting to the terminal
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[core]
  excludesfile = ~/.gitignore
  editor = vim
[apply]
  whitespace = nowarn
[mergetool]
  keepBackup = false
[difftool]
  prompt = false
[help]
  autocorrect = 1
